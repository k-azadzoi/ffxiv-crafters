{"ast":null,"code":"const resources = require('./resources/'),\n      Search = require('./lib/search'),\n      Data = require('./lib/data'),\n      Character = require('./lib/character'),\n      FreeCompany = require('./lib/freecompany'),\n      Linkshell = require('./lib/linkshell'),\n      PvPTeam = require('./lib/pvpteam');\n\nclass XIVAPI {\n  /*{\n  \tprivate_key\tstring\tundefined\toptional\n  \tlanguage\t\tstring\t'en'\t\t\toptional\n  \tsnake_case\tbool\t\tfalse\t\t\toptional\n  \tstaging\t\t\tbool\t\tfalse\t\t\toptional\n  \tverbose\t\t\tbool\t\tfalse\t\t\toptional\n  }\n  */\n  constructor(options = {}, legacyOptions = {}) {\n    //handle attempted use of old API key\n    if (typeof options === 'string') {\n      console.error('[xivapi-js] BREAKING CHANGE:\\n\\\nThe previous API keys for XIVAPI have been phased out, and are no longer mandatory. \\\nThis means you\\'ll have to define your key during initialization slightly differently. \\\nSee how in https://github.com/xivapi/xivapi-js/releases/tag/v0.1.3.\\n\\\n**This instance of xivapi-js will run WITHOUT an API key**');\n      options = legacyOptions;\n    }\n\n    this.endpoint = `https://${options.staging ? 'staging.' : ''}xivapi.com`;\n    if (options.language && !resources.languages.includes(options.language)) throw Error(`Invalid language given, must be one of: ${this.resources.languages}`);\n    this.globalParams = {};\n\n    for (let x of ['private_key', 'language']) {\n      if (typeof options[x] !== 'undefined') this.globalParams[x] = options[x];\n    }\n\n    if (options.snake_case) this.globalParams.snake_case = 1;\n    this.verbose = options.verbose;\n    this.resources = resources;\n    this.utils = require('./utils');\n    this.search = Search.bind(this);\n    this.data = new Data(this);\n    this.character = new Character(this);\n    this.freecompany = new FreeCompany(this);\n    this.linkshell = new Linkshell(this);\n    this.pvpteam = new PvPTeam(this);\n  }\n\n}\n\nmodule.exports = XIVAPI;","map":{"version":3,"sources":["/Users/kencharette/on-campus/ffxiv-crafters/node_modules/xivapi-js/XIVAPI.js"],"names":["resources","require","Search","Data","Character","FreeCompany","Linkshell","PvPTeam","XIVAPI","constructor","options","legacyOptions","console","error","endpoint","staging","language","languages","includes","Error","globalParams","x","snake_case","verbose","utils","search","bind","data","character","freecompany","linkshell","pvpteam","module","exports"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAzB;AAAA,MACCC,MAAM,GAAGD,OAAO,CAAC,cAAD,CADjB;AAAA,MAECE,IAAI,GAAGF,OAAO,CAAC,YAAD,CAFf;AAAA,MAGCG,SAAS,GAAGH,OAAO,CAAC,iBAAD,CAHpB;AAAA,MAICI,WAAW,GAAGJ,OAAO,CAAC,mBAAD,CAJtB;AAAA,MAKCK,SAAS,GAAGL,OAAO,CAAC,iBAAD,CALpB;AAAA,MAMCM,OAAO,GAAGN,OAAO,CAAC,eAAD,CANlB;;AAQA,MAAMO,MAAN,CAAa;AACZ;;;;;;;;AAQAC,EAAAA,WAAW,CAACC,OAAO,GAAG,EAAX,EAAeC,aAAa,GAAG,EAA/B,EAAmC;AAC7C;AACA,QAAG,OAAOD,OAAP,KAAoB,QAAvB,EAAiC;AAChCE,MAAAA,OAAO,CAACC,KAAR,CAAc;;;;2DAAd;AAKAH,MAAAA,OAAO,GAAGC,aAAV;AACA;;AAED,SAAKG,QAAL,GAAiB,WAAUJ,OAAO,CAACK,OAAR,GAAkB,UAAlB,GAA+B,EAAG,YAA7D;AACA,QAAGL,OAAO,CAACM,QAAR,IAAoB,CAAChB,SAAS,CAACiB,SAAV,CAAoBC,QAApB,CAA6BR,OAAO,CAACM,QAArC,CAAxB,EACC,MAAMG,KAAK,CAAE,2CAA0C,KAAKnB,SAAL,CAAeiB,SAAU,EAArE,CAAX;AAED,SAAKG,YAAL,GAAoB,EAApB;;AAEA,SAAK,IAAIC,CAAT,IAAc,CAAC,aAAD,EAAgB,UAAhB,CAAd,EAA2C;AAC1C,UAAG,OAAOX,OAAO,CAACW,CAAD,CAAd,KAAsB,WAAzB,EACC,KAAKD,YAAL,CAAkBC,CAAlB,IAAuBX,OAAO,CAACW,CAAD,CAA9B;AACD;;AACD,QAAGX,OAAO,CAACY,UAAX,EACC,KAAKF,YAAL,CAAkBE,UAAlB,GAA+B,CAA/B;AAED,SAAKC,OAAL,GAAeb,OAAO,CAACa,OAAvB;AAEA,SAAKvB,SAAL,GAAiBA,SAAjB;AACA,SAAKwB,KAAL,GAAavB,OAAO,CAAC,SAAD,CAApB;AAEA,SAAKwB,MAAL,GAAcvB,MAAM,CAACwB,IAAP,CAAY,IAAZ,CAAd;AACA,SAAKC,IAAL,GAAY,IAAIxB,IAAJ,CAAS,IAAT,CAAZ;AACA,SAAKyB,SAAL,GAAiB,IAAIxB,SAAJ,CAAc,IAAd,CAAjB;AACA,SAAKyB,WAAL,GAAmB,IAAIxB,WAAJ,CAAgB,IAAhB,CAAnB;AACA,SAAKyB,SAAL,GAAiB,IAAIxB,SAAJ,CAAc,IAAd,CAAjB;AACA,SAAKyB,OAAL,GAAe,IAAIxB,OAAJ,CAAY,IAAZ,CAAf;AACA;;AA5CW;;AA+CbyB,MAAM,CAACC,OAAP,GAAiBzB,MAAjB","sourcesContent":["const resources = require('./resources/'),\n\tSearch = require('./lib/search'),\n\tData = require('./lib/data'),\n\tCharacter = require('./lib/character'),\n\tFreeCompany = require('./lib/freecompany'),\n\tLinkshell = require('./lib/linkshell'),\n\tPvPTeam = require('./lib/pvpteam')\n\nclass XIVAPI {\n\t/*{\n\t\tprivate_key\tstring\tundefined\toptional\n\t\tlanguage\t\tstring\t'en'\t\t\toptional\n\t\tsnake_case\tbool\t\tfalse\t\t\toptional\n\t\tstaging\t\t\tbool\t\tfalse\t\t\toptional\n\t\tverbose\t\t\tbool\t\tfalse\t\t\toptional\n\t}\n\t*/\n\tconstructor(options = {}, legacyOptions = {}) {\n\t\t//handle attempted use of old API key\n\t\tif(typeof(options) === 'string') {\n\t\t\tconsole.error('[xivapi-js] BREAKING CHANGE:\\n\\\nThe previous API keys for XIVAPI have been phased out, and are no longer mandatory. \\\nThis means you\\'ll have to define your key during initialization slightly differently. \\\nSee how in https://github.com/xivapi/xivapi-js/releases/tag/v0.1.3.\\n\\\n**This instance of xivapi-js will run WITHOUT an API key**')\n\t\t\toptions = legacyOptions\n\t\t}\n\n\t\tthis.endpoint = `https://${options.staging ? 'staging.' : ''}xivapi.com`\n\t\tif(options.language && !resources.languages.includes(options.language))\n\t\t\tthrow Error(`Invalid language given, must be one of: ${this.resources.languages}`)\n\n\t\tthis.globalParams = {}\n\n\t\tfor (let x of ['private_key', 'language']) {\n\t\t\tif(typeof options[x] !== 'undefined')\n\t\t\t\tthis.globalParams[x] = options[x]\n\t\t}\n\t\tif(options.snake_case)\n\t\t\tthis.globalParams.snake_case = 1\n\n\t\tthis.verbose = options.verbose\n\n\t\tthis.resources = resources\n\t\tthis.utils = require('./utils')\n\n\t\tthis.search = Search.bind(this)\n\t\tthis.data = new Data(this)\n\t\tthis.character = new Character(this)\n\t\tthis.freecompany = new FreeCompany(this)\n\t\tthis.linkshell = new Linkshell(this)\n\t\tthis.pvpteam = new PvPTeam(this)\n\t}\n}\n\nmodule.exports = XIVAPI\n"]},"metadata":{},"sourceType":"script"}