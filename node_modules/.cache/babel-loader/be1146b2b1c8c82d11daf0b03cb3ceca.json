{"ast":null,"code":"// https://xivapi.com/docs/Free-Company\nconst Lib = require('./Lib');\n\nclass FreeCompany extends Lib {\n  constructor(parent) {\n    super(parent);\n  }\n  /*\n  {\n  \tserver\tstring\toptional\n  \tpage\t\tint\t\t\toptional\n  }\n  */\n\n\n  search(name, params = {}) {\n    return new Promise((resolve, reject) => {\n      if (typeof name === 'undefined') reject(this.throwError('freecompany.search()', 'a name'));\n      this.req('/freecompany/search', Object.assign(params, {\n        name: name\n      })).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n  /*\n  {\n  \textended\n  \tdata\n  }\n  */\n\n\n  get(id, params = {}) {\n    return new Promise((resolve, reject) => {\n      if (typeof id === 'undefined') reject(this.throwError('freecompany.get()', 'an ID'));\n      params.data = this.makeCSV(params.data);\n      this.req('/freecompany/' + id, params).then(res => {\n        resolve(res);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nmodule.exports = FreeCompany;","map":{"version":3,"sources":["/Users/kencharette/on-campus/ffxiv-crafters/node_modules/xivapi-js/lib/freecompany.js"],"names":["Lib","require","FreeCompany","constructor","parent","search","name","params","Promise","resolve","reject","throwError","req","Object","assign","then","res","catch","err","get","id","data","makeCSV","module","exports"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMC,WAAN,SAA0BF,GAA1B,CAA8B;AAC7BG,EAAAA,WAAW,CAACC,MAAD,EAAS;AACnB,UAAMA,MAAN;AACA;AAED;;;;;;;;AAMAC,EAAAA,MAAM,CAACC,IAAD,EAAOC,MAAM,GAAG,EAAhB,EAAoB;AACzB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,UAAG,OAAOJ,IAAP,KAAiB,WAApB,EACCI,MAAM,CAAC,KAAKC,UAAL,CAAgB,sBAAhB,EAAwC,QAAxC,CAAD,CAAN;AAED,WAAKC,GAAL,CACC,qBADD,EAECC,MAAM,CAACC,MAAP,CAAcP,MAAd,EAAsB;AAACD,QAAAA,IAAI,EAACA;AAAN,OAAtB,CAFD,EAGES,IAHF,CAGQC,GAAD,IAAS;AACfP,QAAAA,OAAO,CAACO,GAAD,CAAP;AACA,OALD,EAKGC,KALH,CAKUC,GAAD,IAAS;AACjBR,QAAAA,MAAM,CAACQ,GAAD,CAAN;AACA,OAPD;AAQA,KAZM,CAAP;AAaA;AAED;;;;;;;;AAMAC,EAAAA,GAAG,CAACC,EAAD,EAAKb,MAAM,GAAG,EAAd,EAAkB;AACpB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,UAAG,OAAOU,EAAP,KAAe,WAAlB,EACCV,MAAM,CAAC,KAAKC,UAAL,CAAgB,mBAAhB,EAAqC,OAArC,CAAD,CAAN;AAEDJ,MAAAA,MAAM,CAACc,IAAP,GAAc,KAAKC,OAAL,CAAaf,MAAM,CAACc,IAApB,CAAd;AAEA,WAAKT,GAAL,CACC,kBAAkBQ,EADnB,EAECb,MAFD,EAGEQ,IAHF,CAGQC,GAAD,IAAS;AACfP,QAAAA,OAAO,CAACO,GAAD,CAAP;AACA,OALD,EAKGC,KALH,CAKUC,GAAD,IAAS;AACjBR,QAAAA,MAAM,CAACQ,GAAD,CAAN;AACA,OAPD;AAQA,KAdM,CAAP;AAeA;;AAjD4B;;AAoD9BK,MAAM,CAACC,OAAP,GAAiBtB,WAAjB","sourcesContent":["// https://xivapi.com/docs/Free-Company\nconst Lib = require('./Lib')\n\nclass FreeCompany extends Lib {\n\tconstructor(parent) {\n\t\tsuper(parent)\n\t}\n\n\t/*\n\t{\n\t\tserver\tstring\toptional\n\t\tpage\t\tint\t\t\toptional\n\t}\n\t*/\n\tsearch(name, params = {}) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif(typeof(name) === 'undefined')\n\t\t\t\treject(this.throwError('freecompany.search()', 'a name'))\n\n\t\t\tthis.req(\n\t\t\t\t'/freecompany/search',\n\t\t\t\tObject.assign(params, {name:name})\n\t\t\t).then((res) => {\n\t\t\t\tresolve(res)\n\t\t\t}).catch((err) => {\n\t\t\t\treject(err)\n\t\t\t})\n\t\t})\n\t}\n\n\t/*\n\t{\n\t\textended\n\t\tdata\n\t}\n\t*/\n\tget(id, params = {}) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif(typeof(id) === 'undefined')\n\t\t\t\treject(this.throwError('freecompany.get()', 'an ID'))\n\n\t\t\tparams.data = this.makeCSV(params.data)\n\n\t\t\tthis.req(\n\t\t\t\t'/freecompany/' + id,\n\t\t\t\tparams\n\t\t\t).then((res) => {\n\t\t\t\tresolve(res)\n\t\t\t}).catch((err) => {\n\t\t\t\treject(err)\n\t\t\t})\n\t\t})\n\t}\n}\n\nmodule.exports = FreeCompany\n"]},"metadata":{},"sourceType":"script"}